{
  "name": "VA Main",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -100,
        -240
      ],
      "id": "cd1f3c50-09b0-4b18-999b-a3101a6208ab",
      "name": "Telegram Trigger",
      "webhookId": "e73f38e6-f36d-4b39-9e27-6f5aca98dcea",
      "credentials": {
        "telegramApi": {
          "id": "b0WtoW9HfS6M7EwB",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "769c4ee6-5c66-4098-8ca5-2ae1ffe6f494"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TEXT"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e43c1a3e-db0e-428c-a465-7efee6a19657",
                    "leftValue": "=voice {{ $json.message.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "VOICE"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        120,
        -240
      ],
      "id": "49e43c7c-9f58-4fa9-acc9-2ef2984a6825",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c89fa06a-d518-4dc7-a800-9a5bba9491ee",
              "name": "Text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        -340
      ],
      "id": "0ed8e1f3-a585-4b61-8ae5-a97ae6278ce8",
      "name": "Set Text"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        340,
        -140
      ],
      "id": "3af2ffda-24e9-4348-96f3-72bcace82082",
      "name": "Telegram",
      "webhookId": "6f96bd5f-1b63-4b36-8c3c-ab3c936bd375",
      "credentials": {
        "telegramApi": {
          "id": "b0WtoW9HfS6M7EwB",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        560,
        -140
      ],
      "id": "3fe24a21-95f9-4b2e-a2ff-64bdbfa4e4d3",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "vzekEXY9eoZNFBns",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        380,
        200
      ],
      "id": "3e48a519-f4f4-4fa0-857b-db73ebea53d5",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "vzekEXY9eoZNFBns",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.Text }}",
        "options": {
          "systemMessage": "=##Overview\n\nYou are an ultimate personal assistant. your job is to direct users query to the correct tool. you should never be writing emails or creating summaries, you should just call the correct tool.\n\n##Tools\n-EmailAgent - use this tool to take action in email\n-CalendarAgent - use this tool to take action in calendar\n-Use \"UpsertRecords\" tool to create or update contact information\n\n#Rules\n-Some Action requires you to look up for contact information, for the following actions you must get the contact information and forward it to the correct agent\n-sending emails\n-drafting emails\n-creating calendars with attendes\n-Booking meetings with attendes\n-Creating new contact information to update in the UpdateRecords tool\n\n##Example\n-Input: send an email about an important meeting at 9pm to selvin \n  -Action: Use \"GetRecords\" tool to get selvin's email\n  -Action: Use \"EmailAgent\" tool to send an email. you will pass the tool a query like \"send an email about an important meeting at 9pm to selvin. here is his email: [email address]\"\n-Output: The email has been sent to selvin, Anything else i can help you with?\n\n-Input: send an email to vedu to pick up groceries at 6pm\n  -Action: Use \"GetRecords\" tool to get Vedu's email\n  -Action: Use \"EmailAgent\" tool to send an email. you will pass the tool a query like \"send an email to vedu to pick up groceries at 6pm. here is his email: [email address]\"\n-Output: The email has been sent to selvin, Anything else i can help you with?\n\n##Final notes\nCurrent Date and Time: {{ $now }}\nContact information: \"GetRecords\" tool\nGet the email information from GetRecords tool only.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        940,
        -240
      ],
      "id": "7b40a27e-83e6-4cdc-ae0f-3acfe2c0c479",
      "name": "Ultimate Personal Assistant"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appSgp8AApjnLF067",
          "mode": "list",
          "cachedResultName": "n8n VA Contact Details",
          "cachedResultUrl": "https://airtable.com/appSgp8AApjnLF067"
        },
        "table": {
          "__rl": true,
          "value": "tbl0kDEOUnCSG6sjM",
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://airtable.com/appSgp8AApjnLF067/tbl0kDEOUnCSG6sjM"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        700,
        200
      ],
      "id": "5ee68559-05f5-498e-81c8-8422a8a86fef",
      "name": "GetRecords",
      "credentials": {
        "airtableTokenApi": {
          "id": "e9W05zPjrrQaiRbx",
          "name": "Airtable Personal Access Token account 2"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.Text }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        540,
        200
      ],
      "id": "6638d269-6614-444b-90e8-04a3aad4ffec",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "name": "EmailAgent",
        "description": "Call this tool to perform email actions (e.g sending emails, replying to emails, drafting, etc)",
        "workflowId": {
          "__rl": true,
          "value": "NyPACpHNJRISBtLz",
          "mode": "list",
          "cachedResultName": "Email Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('text', ``, 'string') }}"
          },
          "matchingColumns": [
            "text"
          ],
          "schema": [
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1020,
        200
      ],
      "id": "fba0d516-0ffa-44e4-a167-402d36921b2f",
      "name": "EmailAgent",
      "notesInFlow": true
    },
    {
      "parameters": {
        "chatId": "5710764845",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1460,
        -240
      ],
      "id": "3cfa7fa8-dbd7-499e-ba41-aa6e4300fc6f",
      "name": "Telegram1",
      "webhookId": "1f21399d-5059-4af9-a9dd-bdc76f668427",
      "credentials": {
        "telegramApi": {
          "id": "b0WtoW9HfS6M7EwB",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to search the internet",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"query\": \"{search_term}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 1,\n  \"time_range\": null,\n  \"days\": 7,\n  \"include_answer\": true,\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": []\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "search_term",
              "description": "when the user wants to get information from the internet or the internet can provide the information for the query",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1520,
        80
      ],
      "id": "67f87549-e0e3-46e0-b21a-36ac1e6daf2e",
      "name": "Tavily",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2OcORTVJPlZXHFFo",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appSgp8AApjnLF067",
          "mode": "list",
          "cachedResultName": "n8n VA Contact Details",
          "cachedResultUrl": "https://airtable.com/appSgp8AApjnLF067"
        },
        "table": {
          "__rl": true,
          "value": "tbl0kDEOUnCSG6sjM",
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://airtable.com/appSgp8AApjnLF067/tbl0kDEOUnCSG6sjM"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id__using_to_match_', ``, 'string') }}",
            "Name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Name', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Attachments",
              "displayName": "Attachments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        860,
        200
      ],
      "id": "fae49a30-21d2-4264-8354-f5dc28e6671d",
      "name": "UpsertRecords",
      "credentials": {
        "airtableTokenApi": {
          "id": "e9W05zPjrrQaiRbx",
          "name": "Airtable Personal Access Token account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1160,
        140
      ],
      "id": "765442c9-70a4-4e91-8362-da84b1aab36f",
      "name": "Call n8n Workflow Tool"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Set Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text": {
      "main": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "GetRecords": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "EmailAgent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ultimate Personal Assistant": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "UpsertRecords": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow Tool": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Personal Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "28a40848-02f5-4722-9579-f05446853dca",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "78087421e4b67f9fb21e2251191fbb543222f8d2c16c850fa045c28b0668c841"
  },
  "id": "qVYJcxCTdHgbExQO",
  "tags": []
}